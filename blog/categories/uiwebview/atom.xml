<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Uiwebview | Cocoa学习]]></title>
  <link href="http://venj.github.io/blog/categories/uiwebview/atom.xml" rel="self"/>
  <link href="http://venj.github.io/"/>
  <updated>2015-11-09T20:47:16+08:00</updated>
  <id>http://venj.github.io/</id>
  <author>
    <name><![CDATA[venj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Mobile Safari打开UIWebView里的链接]]></title>
    <link href="http://venj.github.io/blog/open-uiwebview-link-in-mobile-safari/"/>
    <updated>2011-08-21T00:31:00+08:00</updated>
    <id>http://venj.github.io/blog/open-uiwebview-link-in-mobile-safari</id>
    <content type="html"><![CDATA[<p><code>UIWebView</code>本身就是一个功能非常完整的浏览器。<code>UIWebView</code>经常被用来向用户展示打包在应用程序中的HTML帮助文档。有时，很多时候，帮助文档需要提供一些外链的链接。如果直接在<code>UIWebView</code>中打开这些链接，不仅会使显示帮助文档的<code>ViewController</code>变得臃肿，而且也没有Mobile Safari那么好的阅读体验。因此，大多数时候，在Mobile Safari中打开外链的链接是一个比较好的解决方法。</p>

<p>方法很简单，如下：</p>

<pre><code class="objc">- (BOOL)webView:(UIWebView *)inWeb shouldStartLoadWithRequest:(NSURLRequest *)inRequest navigationType:(UIWebViewNavigationType)inType {
    if (inType == UIWebViewNavigationTypeLinkClicked) {
        [[UIApplication sharedApplication] openURL:[inRequest URL]];
        return NO;
    }

    return YES;
}
</code></pre>

<p>这里用到的是<code>UIWebViewDelegate</code>的<code>-webView:shouldStartLoadWithRequest:navigationType:</code>方法。在示例代码中，我只是简单的在用户点击链接的时候调用Mobile Safari打开链接。在实际应用中，完全可以加入一些判断条件来针对不同的URL选择是否直接在<code>UIWebView</code>里打开或在Mobile Safari里打开。</p>

<p>（全文完）</p>
]]></content>
  </entry>
  
</feed>
