<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios 6 | Cocoa学习]]></title>
  <link href="http://cocoa.venj.me/blog/categories/ios-6/atom.xml" rel="self"/>
  <link href="http://cocoa.venj.me/"/>
  <updated>2015-11-11T09:29:09+08:00</updated>
  <id>http://cocoa.venj.me/</id>
  <author>
    <name><![CDATA[venj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用代码触发下拉更新]]></title>
    <link href="http://cocoa.venj.me/blog/refresh-control-gochas/"/>
    <updated>2012-12-20T14:55:00+08:00</updated>
    <id>http://cocoa.venj.me/blog/refresh-control-gochas</id>
    <content type="html"><![CDATA[<p><code>UIRefreshControl</code>是iOS 6中的一个新控件，这个控件就是大家熟悉的下拉更新控件。关于如何把<code>UIRefreshControl</code>集成至<code>UITableViewController</code>中相信大家都知道怎么做。至于用代码触发下拉更新，查看Apple的文档后，我们看到<code>UIRefreshControl</code>有一个方法：<code>- beginRefreshing</code>。写到这里，貌似问题依然解决，没什么好说的了。但是真是这样吗？让我们来创建一个测试项目进行验证：</p>

<ol>
<li><p>创建一个Master-Detail Application项目，取名“RefreshControl”（你可以随便取），设备选iPhone，够上“Use Automatic Reference Counting”和“Use Storyboards”（你也可以不用Storyboard，反正差不多）。</p></li>
<li><p>（可选）打开MainStoryboard.storyboard（或MasterViewController.xib，如果你在1中没有勾选Use Storyboards），启用Master View Controller的Refreshing。</p>

<p><img class="center" src="/images/posts/master_refreshcontrol.png"></p></li>
<li><p>打开MasterViewController.m，更改代码如下：</p></li>
</ol>


<!-- more -->


<pre><code class="objc">- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view, typically from a nib.
    self.navigationItem.leftBarButtonItem = self.editButtonItem;
    // self.refreshControl = [[UIRefreshControl alloc] init]; // 如果你没有做步骤2，取消注释本行。
    [self.refreshControl addTarget:self action:@selector(insertNewObject:) forControlEvents:UIControlEventValueChanged]; // 设置下拉刷新时执行的动作

    UIBarButtonItem *addButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(addButtonAction:)]; // 通过代码触发下拉刷新动作
    self.navigationItem.rightBarButtonItem = addButton;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

// 下拉刷新动作
- (void)addButtonAction:(id)sender {
    [self.refreshControl beginRefreshing]; // 触发刷新动作
}

- (void)insertNewObject:(id)sender
{
    // 使用Timer来模拟一个耗时的操作
    [NSTimer scheduledTimerWithTimeInterval:2 target:self selector:@selector(doSomething) userInfo:nil repeats:NO];
}

// 这是模板自动生成的插入新项目的代码，我们把它移入了一个新方法，并增加结束刷新的代码。
- (void)doSomething {
    if (!_objects) {
        _objects = [[NSMutableArray alloc] init];
    }
    [_objects insertObject:[NSDate date] atIndex:0];
    NSIndexPath *indexPath = [NSIndexPath indexPathForRow:0 inSection:0];
    [self.tableView insertRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
    [self.refreshControl endRefreshing]; // 结束刷新
}
</code></pre>

<p>编译执行。</p>

<p>首先，我们先测试手动下拉刷新－－如果你设置正确的话，程序运行良好，下拉更新OK了。</p>

<p>然后，我们试试点击右上角的“＋”按钮。我们希望它也能正常运行。但是这时候，问题出现了－－好像程序啥都没有做！但是实际上，<code>UIRefreshControl</code>确实在工作了。不信你可以把TableView往下拉一点，我们能看到进度圈在转。但是奇怪的是，<code>- doSomething</code>代码似乎没有执行。</p>

<p>为了解决这个问题，我们在<code>- addButtonAction:</code>方法中在调用<code>－ beginRefreshing</code>之后加入一行代码：</p>

<pre><code class="objc">[self insertNewObject:nil]; //手工执行插入新行的动作
// 或者
[self.refreshControl sendActionsForControlEvents:UIControlEventValueChanged]; //发送ValueChanged事件（推荐）
</code></pre>

<p>再次编译执行后，我们发现<code>- doSomething</code>可以正确执行了，但是，进度圈还是藏在TableView可见范围的上方。为了解决这个问题，我们需要在<code>- addButtonAction:</code>方法中，在调用<code>－ beginRefreshing</code>之前再加入一行代码：</p>

<pre><code class="objc">[self.tableView setContentOffset:CGPointMake(0, -44) animated:YES];
</code></pre>

<p>编译执行，点击“＋”按钮，进度圈出现，2秒后，新条目加入，进度圈消失，我们的问题也解决了。</p>

<p>总结一下，用代码触发下拉更新有两个陷阱：1. 调用<code>- beginRefreshing</code>方法不会触发<code>UIControlEventValueChanged</code>事件；2. 调用<code>- beginRefreshing</code>方法不会自动显示进度圈。</p>

<p>示例代码已经上传至<a href="https://github.com/venj/Cocoa-blog-code/tree/master/RefreshControl">github</a>。如果你有更好的方法，或者你觉得我的处理方法有错误，请留言指正。谢谢。</p>

<p>（全文完）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 6下的驾车导航]]></title>
    <link href="http://cocoa.venj.me/blog/drive-navigation-in-ios6/"/>
    <updated>2012-11-26T11:18:00+08:00</updated>
    <id>http://cocoa.venj.me/blog/drive-navigation-in-ios6</id>
    <content type="html"><![CDATA[<p>好久没有写Blog了，今天正好碰上了一个问题，于是决定写一写博客简单描述下。情况是这样的：之前，在iOS 5下，要显示一个从当前为止到目标位置的驾车导航可以使用如下的代码来搞定（<a href="http://developer.apple.com/library/ios/#featuredarticles/iPhoneURLScheme_Reference/Articles/MapLinks.html">参考这里</a>）：</p>

<pre><code class="objc">//基于地名调用iOS自带的Google Maps导航
NSString *urlEncodedCurrentPlaceName = [@"当前位置" stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; //简单起见，没有考虑多语言*（注）*。
NSString *mapLink = [[NSString alloc] initWithFormat:@"http://maps.google.com/maps?daddr=%@&amp;saddr=%@", urlEncodedDestinationPlaceName, ];
[[UIApplication sharedApplication] openURL:[[NSURL alloc] initWithString:mapLink]];
</code></pre>

<!-- more -->


<p>但是假如我们只有起始位置和终点位置的经纬度地址怎么办？Google Maps还是很智能的，只需直接传入逗号分隔的经纬度坐标即可。如下：</p>

<pre><code class="objc">//基于经纬度调用iOS自带的Google Maps导航
NSString *urlEncodedCurrentPlaceName = [@"当前位置" stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
NSString *mapLink = [[NSString alloc] initWithFormat:@"http://maps.google.com/maps?daddr=%f,%f&amp;saddr=%@", destLat, destLng, urlEncodedCurrentPlaceName];
[[UIApplication sharedApplication] openURL:[[NSURL alloc] initWithString:mapLink]];
</code></pre>

<p>这招在iOS 6下有点问题的。因为大家都知道苹果把iOS 6的地图换成了自己的地图应用，所以使用上面的实现方法只能转跳到Mobile Safari中的Google Maps网站。虽然路线也是可以用的，但是总觉得有些不爽。</p>

<p>后来查文档发现，要转跳Apple地图应用其实很简单，只需把上面代码里的google换成apple即可：</p>

<pre><code class="objc">//基于地名调用iOS自带的Google Maps导航
NSString *mapLink = [[NSString alloc] initWithFormat:@"http://maps.apple.com/maps?daddr=%@&amp;saddr=%@", urlEncodedDestinationPlaceName, urlEncodedCurrentPlaceName];
[[UIApplication sharedApplication] openURL:[[NSURL alloc] initWithString:mapLink]];
</code></pre>

<p>但是遗憾的是，这个实现方法不支持传入经纬度。如果传入经纬度值，虽然能够转跳Apple地图应用，但是总是提示“地图服务器不可用”。但事实上，你在地图应用里使用导航功能是没问题的，所以并非地图服务器不可用，而是Apple地图不支持直接传经纬度作为地名。而且，iOS 6的地图程序也不支持“当前位置”这个特殊地名。我尝试了把经纬度进行<a href="http://cocoa.venj.me/blog/geocoding-in-ios-5/">反向地理位置解析</a>，再把解析到的地址用于地图导航。但是结果显示，反向地理位置解析实在是偏移太大了，因此这个方案显然是不可行的。</p>

<p>经过Google搜索和查看Apple文档发现，MapKit在iOS 6里引入了一个新类：<a href="http://developer.apple.com/library/ios/#documentation/MapKit/Reference/MKMapItem_class/Reference/Reference.html">MKMapItem</a>，这个类是解决这个问题的关键。其中最重要的方法是<code>-openMapsWithItems:launchOptions:</code>和<code>+mapItemForCurrentLocation</code>下面是从当前位置到目标经纬度的驾车导航在iOS 6中的实现。</p>

<pre><code class="objc">Class mapItemClass = [MKMapItem class];
if (mapItemClass &amp;&amp; [mapItemClass respondsToSelector:@selector(openMapsWithItems:launchOptions:)]) { // For iOS 6
    CLLocationCoordinate2D destCoord = CLLocationCoordinate2DMake(destLat, destLng); //目标经纬度坐标
    MKPlacemark *destPlacemark = [[MKPlacemark alloc] initWithCoordinate:destCoord addressDictionary:nil];
    MKMapItem *destMapItem = [[MKMapItem alloc] initWithPlacemark:destPlacemark];
    MKMapItem *currentMapItem = [MKMapItem mapItemForCurrentLocation];

    [MKMapItem openMapsWithItems:@[currentMapItem, destMapItem] 
                   launchOptions:@{MKLaunchOptionsDirectionsModeKey: MKLaunchOptionsDirectionsModeDriving}];
}
else { // For iOS 5 and before.
    NSString *urlEncodedCurrentPlaceName = [@"当前位置" stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    NSString *mapLink = [[NSString alloc] initWithFormat:@"http://maps.google.com/maps?daddr=%f,%f&amp;saddr=%@", destLat, destLng, urlEncodedCurrentPlaceName];
    [[UIApplication sharedApplication] openURL:[[NSURL alloc] initWithString:mapLink]];
}
</code></pre>

<p>上面的实现能够同时兼容iOS 6以及iOS 5.x和更早版本。经测试，该方法能够很精确的显示定位和导航信息。至此，驾车导航的问题基本上完美解决。</p>

<p>（Updated）iOS 5的实现中，使用maps.apple.com访问地图程序，会先转跳Safari，然后再转跳地图程序。因此还是改回maps.google.com，避免一次多余的浏览器转跳。</p>

<p>（注）关于“当前位置”这个特殊地名的多语言支持参考<a href="http://www.martip.net/blog/localized-current-location-string-for-iphone-apps">这里</a>。</p>

<p>(全文完)</p>
]]></content>
  </entry>
  
</feed>
