<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 圆角 | Cocoa学习]]></title>
  <link href="http://venj.github.io/blog/categories/yuan-jiao/atom.xml" rel="self"/>
  <link href="http://venj.github.io/"/>
  <updated>2014-01-22T11:11:39+08:00</updated>
  <id>http://venj.github.io/</id>
  <author>
    <name><![CDATA[venj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一个简单的创建圆角图像的UIImage扩展实现]]></title>
    <link href="http://venj.github.io/blog/simple-uiimage-extension-to-create-rounded-corner-image/"/>
    <updated>2014-01-20T13:58:15+08:00</updated>
    <id>http://venj.github.io/blog/simple-uiimage-extension-to-create-rounded-corner-image</id>
    <content type="html"><![CDATA[<p>在iOS开发中经常需要用到圆角图像。简单搜索一下就能找到很多创建圆角图像的实现代码。我在<a href="http://stackoverflow.com/questions/10563986/uiimage-with-rounded-corners">Stack Overflow</a>上找到了一段代码，略微修改了一下，写了个简单的Category方法，可以用来创建圆角图像。代码如下：</p>

<!-- more -->


<p>```objc
/<em> UIImage+RoundedRect.h</em>/</p>

<h1>import &lt;UIKit/UIKit.h></h1>

<p>@interface UIImage (RoundedCorner)
&ndash; (UIImage *)roundedCornerImageWithCornerRadius:(CGFloat)cornerRadius;
@end</p>

<p>/<em> UIImage+RoundedRect.m</em>/</p>

<h1>import &ldquo;UIImage+RoundedCorner.h&rdquo;</h1>

<p>@implementation UIImage (RoundedCorner)</p>

<ul>
<li><p>(UIImage *)roundedCornerImageWithCornerRadius:(CGFloat)cornerRadius {
  CGFloat w = self.size.width;
  CGFloat h = self.size.height;
  CGFloat scale = [UIScreen mainScreen].scale;
  // 防止圆角半径小于0，或者大于宽/高中较小值的一半。
  if (cornerRadius &lt; 0)
      cornerRadius = 0;
  else if (cornerRadius > MIN(w, h))
      cornerRadius = MIN(w, h) / 2.;</p>

<p>  UIImage *image = nil;
  CGRect imageFrame = CGRectMake(0., 0., w, h);
  UIGraphicsBeginImageContextWithOptions(self.size, NO, scale);
  [[UIBezierPath bezierPathWithRoundedRect:imageFrame cornerRadius:cornerRadius] addClip];
  [self drawInRect:imageFrame];
  image = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();</p>

<p>  return image;
}</p></li>
</ul>


<p>@end
```</p>

<p>把这个Category添加到项目中之后，直接对<code>UIImage</code>对象调用<code>- roundedCornerImageWithCornerRadius:</code>方法即可。以上实现并非最高效，最佳的实现，但是有时候Quick and Dirty的方法已经足够好了，是吧。（天音：你就自我安慰吧。）</p>

<p>(全文完)</p>
]]></content>
  </entry>
  
</feed>
