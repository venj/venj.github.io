<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 字体 | Cocoa学习]]></title>
  <link href="http://cocoa.venj.me/blog/categories/zi-ti/atom.xml" rel="self"/>
  <link href="http://cocoa.venj.me/"/>
  <updated>2015-11-14T21:29:22+08:00</updated>
  <id>http://cocoa.venj.me/</id>
  <author>
    <name><![CDATA[venj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在iOS程序中使用自定义字体]]></title>
    <link href="http://cocoa.venj.me/blog/custom-fonts-in-ios-apps/"/>
    <updated>2012-01-10T10:58:00+08:00</updated>
    <id>http://cocoa.venj.me/blog/custom-fonts-in-ios-apps</id>
    <content type="html"><![CDATA[<p>好久没有更新这里了，今天开始慢慢恢复更新。好了，废话不多说，开始讲正题。今天的话题其实也很简单，那就是在iOS中使用自定义字体。</p>

<p>虽然iOS自带的字体通常已经足够我们使用了，但是，对于某些特殊程序来说，比如，电子书程序，可能需要用到一些特殊的字体，或者需要用更好看的字体来达到我们想要的显示效果。不过，iOS是不支持系统级安装新字体的。不过在iOS 3.x中，我们已经可以用一个很简单的方法来使用自定义字体了。</p>

<p>我们来创建一个简单的iOS项目来做演示。在界面上拖入一个<code>UITextView</code>，在代码中创建一个<code>IBOutlet</code>指向这个<code>UITextView</code>。我们从OSX中找一个iOS下没有的字体，比如：PTSans.ttc（这个也是Octopress模版的默认字体，我很喜欢这个字体），拖放到项目中。</p>

<p>打开info.plist，增加一个新的Array类型的键，键名设置为UIAppFonts（Fonts provided by application），增加字体的<strong>文件名</strong>：“PTSans.ttc“。</p>

<p>然后我们就可以在程序中调用这个字体了：</p>

<!-- more -->


<pre><code class="objc">- (void)viewDidLoad
{
    [super viewDidLoad];
    // 在viewDidLoad方法中设置字体。
    self.tv.font = [UIFont fontWithName:@"PT Sans" size:20];
}
</code></pre>

<p>下面是在iOS模拟器中的显示效果：</p>

<p><img class="center" src="/images/posts/customfont.png"></p>

<p>还不错吧。 :)</p>

<p>最后提醒一点，在调用字体的时候，要使用字体名。<strong>字体名不是文件名</strong>，而是字体的Family Name。Family Name可以在Font Book中查看。</p>

<p>本文的示例代码已经推送到<a href="https://github.com/venj/Cocoa-blog-code/tree/master/iPhoneCustomFont">Github</a>上了。在编译示例代码前，请先复制PTSans.ttc到<code>iPhoneCustomFont/iPhoneCustomFont</code>目录下。</p>

<p>(全文完)</p>
]]></content>
  </entry>
  
</feed>
